<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-file="http://www.springframework.org/schema/integration/file"
	xmlns:int-jpa="http://www.springframework.org/schema/integration/jpa"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/integration/jpa http://www.springframework.org/schema/integration/jpa/spring-integration-jpa-4.1.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-4.1.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.4.xsd">

	<!-- <import resource="classpath:/META-INF/spring/integration/hibernate-context.xml" /> -->


	<!-- ******************************** SHARED CHANNELS ***************************************** -->
	
	<!-- ** TRANSFORMER -> SCHEDULE LOADER** -->
	<int:channel id="transformerChOut"/>
	
	<!-- **************************************** PERSISTENCE ***************************************** -->

	<beans profile="PersistenceTests, default">
		<jdbc:embedded-database id="dataSource" type="H2" />

		<!-- <jdbc:initialize-database data-source="dataSource" ignore-failures="DROPS"> 
			<jdbc:script location="classpath:/META-INF/SQL/H2-DropTables.sql" /> <jdbc:script 
			location="classpath:/META-INF/SQL/H2-CreateTables.sql" /> <jdbc:script location="classpath:/META-INF/SQL/H2-PopulateData.sql" 
			/> </jdbc:initialize-database> -->


		<!-- Define the JPA transaction manager -->
		<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
			<constructor-arg ref="entityManagerFactory" />
		</bean>


		<bean id="entityManagerFactory"
			class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="jpaVendorAdapter" ref="vendorAdaptor" />
			<property name="packagesToScan" value="guiatv.persistence.domain" />
		</bean>

		<bean id="abstractVendorAdaptor" abstract="true">
			<property name="generateDdl" value="true" />
			<property name="database" value="H2" />
			<property name="showSql" value="false" />
		</bean>

		<bean id="entityManager"
			class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
			<property name="entityManagerFactory" ref="entityManagerFactory" />
		</bean>

		<bean id="vendorAdaptor"
			class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
			parent="abstractVendorAdaptor">
		</bean>

	</beans>

	<!-- **************************************** GRABBER ***************************************** -->

	<beans profile="dev2">
		<int:channel id="grabberChOut" fixed-subscriber="true" />
		
		<bean id="xmltvGrabber" class="guiatv.xmltv.grabber.XMLTVGrabber" />

		<int:inbound-channel-adapter ref="xmltvGrabber"
			method="doGrabbing" channel="grabberChOut" id="grabberInbound">
			<int:poller max-messages-per-poll="1" cron="0 	*  *  *   *  ?  " />
			<!-- sec m h dm m dw -->
		</int:inbound-channel-adapter>

		<int-file:outbound-channel-adapter
			id="grabberOutbound" channel="grabberChOut" directory="file:xmltv_cap"
			auto-create-directory="true" mode="REPLACE" temporary-file-suffix=".writing"
			delete-source-files="true">
		</int-file:outbound-channel-adapter>
	</beans>

	<!-- **************************************** GRABBER POLLER ***************************************** -->
	<beans profile="dev, default">
		
		<int:channel id="transformerChIn" fixed-subscriber="true" />
		
		<bean id="compositeFilter"
			class="org.springframework.integration.file.filters.CompositeFileListFilter">
			<constructor-arg>
				<list>
					<bean
						class="org.springframework.integration.file.filters.RegexPatternFileListFilter">
						<constructor-arg
							value="xmltvDump_[0-9][0-9][0-9][0-9]_[0-9][0-9]_[0-9][0-9]_[0-9][0-9]_[0-9][0-9]_[0-9][0-9]\.xml" />
					</bean>
					<bean
						class="org.springframework.integration.file.filters.AcceptOnceFileListFilter" />
					<bean class="guiatv.xmltv.transformer.EntireFileFilter" />
				</list>
			</constructor-arg>
		</bean>
		
		<int-file:inbound-channel-adapter id="filePollerInbound"
			directory="file:xmltv_cap" channel="transformerChIn" auto-startup="true"
			filter="compositeFilter">
			<int:poller fixed-rate="10000" />
		</int-file:inbound-channel-adapter>
	</beans>
	<!-- **************************************** TRANSFORMER POLLER ***************************************** -->
	<beans profile="dev, default">
		
		<!-- <int:channel id="transformerChOut"/> -->
		
		<bean id="xmltvTransformerBean" class="guiatv.xmltv.transformer.XMLTVTransformer" />
		
		<int:transformer id="transformerXmlToPojo" ref="xmltvTransformerBean"
			input-channel="transformerChIn" method="transform" output-channel="transformerChOut" />

		
	</beans>
	
	<!-- **************************************** SCHEDULE LOADER ***************************************** -->
	
	<beans profile="dev, default, PersistenceTests">
		<bean id="scheduleLoader" class="guiatv.scheduleloader.ScheduleLoader" />
		
		<int:outbound-channel-adapter id="scheduleLoaderOutbound"
			channel="transformerChOut" ref="scheduleLoader" method="loadListSchedules">
		</int:outbound-channel-adapter>
	</beans>

	<!-- ******************************** IMAGE PROCESSING GATEWAY ***************************************** -->
	<beans profile="dev2">
		<int:channel id="sendFrameChOut" />

		<int:channel id="sendFrameChOut">
			<int:dispatcher task-executor="taskExecutor"
				load-balancer="round-robin" />
		</int:channel>



		<bean id="taskExecutor"
			class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
			<property name="corePoolSize" value="5" />
			<property name="maxPoolSize" value="10" />
			<property name="queueCapacity" value="25" />
		</bean>

		<bean id="classificationWorker" class="guiatv.cv.classificator.ClassificationWorker" />

		<bean id="trainingWorker" class="guiatv.cv.trainer.TrainingWorker" />

		<bean id="customFrameRouter" class="guiatv.eventmanager.FrameRouter" />


		<int:gateway id="imgProcessingGateway" service-interface="guiatv.eventmanager.ImgProcessingGateway"
			default-request-timeout="5000" default-reply-timeout="5000">
			<int:method name="sendFrame" request-channel="sendFrameChOut" />
		</int:gateway>

		<int:router id="frameRouter" input-channel="sendFrameChOut"
			ref="customFrameRouter" method="processFrame" />

		<int:channel id="classificationChBridgeIn" />
		<int:bridge input-channel="classificationChBridgeIn"
			output-channel="classificationChIn" />
		<int:channel id="trainingChBridgeIn" />
		<int:bridge input-channel="trainingChBridgeIn"
			output-channel="trainingChIn" />

		<int:channel id="classificationChIn">
			<int:dispatcher task-executor="taskExecutor"
				load-balancer="round-robin" />
		</int:channel>
		<int:channel id="trainingChIn">
			<int:dispatcher task-executor="taskExecutor"
				load-balancer="round-robin" />
		</int:channel>

		<int:outbound-channel-adapter id="classificationWorkerOutbound"
			channel="classificationChIn" ref="classificationWorker" method="classify" />

		<int:outbound-channel-adapter id="trainingWorkerOutbound"
			channel="trainingChIn" ref="trainingWorker" method="train" />
	</beans>




	<!-- **************************************** ****************** PERSISTENCE 
		TEST ****************** ********************************************* -->

	<!-- <int-jpa:retrieving-outbound-gateway id="getAllEventsOutbound" entity-manager-factory="entityManagerFactory" 
		request-channel="getAllEventChIn" jpa-query="select e from Event e"> </int-jpa:retrieving-outbound-gateway> -->

	<!-- **************************************** ****************** MQTT CLIENT 
		TEST ****************** ********************************************* -->
	<beans profile="eventProducerTests">
		<bean id="taskExecutor"
			class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
			<property name="corePoolSize" value="5" />
			<property name="maxPoolSize" value="10" />
			<property name="queueCapacity" value="25" />
		</bean>
		<bean id="taskExecutorClient" class="guiatv.eventproducer.utils.TaskExecutorMQTTClient"
			scope="prototype">
			<constructor-arg ref="taskExecutor" />
		</bean>
	</beans>


</beans>
