<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-file="http://www.springframework.org/schema/integration/file"
	xmlns:int-jpa="http://www.springframework.org/schema/integration/jpa"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/integration/jpa http://www.springframework.org/schema/integration/jpa/spring-integration-jpa-4.1.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-4.1.xsd">

	
	<import resource="classpath:/META-INF/spring/integration/hibernate-context.xml" />
	<import resource="classpath:/META-INF/spring/integration/rabbitmq-context.xml" />
	
	<!-- ****************************************
	****************** COMMON UTILITY ****************** 
	*********************************************-->
	<bean id="commonUtility" class="common.CommonUtility" />
	
	
	<!-- ****************************************
	****************** GRABBER ****************** 
	*********************************************-->
	<int:channel id="xmltvFileInChannel" />
	<int:channel id="xmltvFileOutChannel" />
	
	<bean id="xmltvGrabber" class="xmltv.grabber.XMLTVGrabber" />
	
	<int:inbound-channel-adapter id="xmltvGrabberInbound"
		ref="xmltvGrabber" method="doGrabbing" channel="xmltvFileInChannel">
		<int:poller max-messages-per-poll="1" cron="0 	*  *  *   *  ?  " />
		<!-- sec m h dm m dw -->
	</int:inbound-channel-adapter>
	
	<int-file:outbound-channel-adapter
		id="xmltvGrabberOutbound" channel="xmltvFileInChannel" directory="file:xmltv_cap"
		auto-create-directory="true" mode="REPLACE" temporary-file-suffix="writing">
	</int-file:outbound-channel-adapter>

	<!-- ****************************************
	****************** TRANSFORMER ****************** 
	*********************************************-->
	<int:channel id="eventTransformerOutChannel" />
	
	<bean id="xmltvTransformerBean" class="xmltv.transformer.XMLTVTransformer" />
	<bean id="xmltvFileComparator" class="xmltv.grabber.CustomFileComparator" />
	
	<int-file:inbound-channel-adapter id="filePoller"
		directory="file:xmltv_cap" channel="xmltvFileOutChannel" auto-startup="true"
		comparator="xmltvFileComparator"
		filename-regex="xmltvDump_[0-9][0-9][0-9][0-9]_[0-9][0-9]_[0-9][0-9]_[0-9][0-9]_[0-9][0-9]_[0-9][0-9]\.xml">
		<int:poller fixed-rate="10000" />
	</int-file:inbound-channel-adapter>
	
	<int:transformer id="xmltvTransformer" ref="xmltvTransformerBean"
		input-channel="xmltvFileOutChannel" method="transform"
		output-channel="eventTransformerOutChannel" />
	
	<!-- ****************************************
	****************** PERSISTENCE ****************** 
	*********************************************-->
	<int:channel id="createMultipleEventsRequestChannel" />
	
	<int:channel id="getCloserEventsRequestChannel" />
	<int:channel id="getCloserEventsReplyChannel" />

	<int:channel id="getAllEventsRequestChannel" />

	<int:gateway id="eventService"
		service-interface="eventmanager.EventService"
		default-request-timeout="5000" default-reply-timeout="5000">
		<int:method name="createMultipleEvents" reply-channel="eventTransformerOutChannel" 
			request-channel="createMultipleEventsRequestChannel"/>
		<int:method name="getCloserEvents" reply-channel="getCloserEventsReplyChannel" 
			request-channel="getCloserEventsRequestChannel" />
		<int:method name="getAllEvents" request-channel="getAllEventsRequestChannel" />
	</int:gateway>

	<int-jpa:updating-outbound-gateway id="createMultipleEventsOutbound"
		entity-manager-factory="entityManagerFactory"
		request-channel="createMultipleEventsRequestChannel">
		<int-jpa:transactional transaction-manager="transactionManager" />
	</int-jpa:updating-outbound-gateway>
	
	<int-jpa:retrieving-outbound-gateway id="getCloserEventsOutbound"
		entity-manager-factory="entityManagerFactory"
		request-channel="getCloserEventsRequestChannel"
		reply-channel="publisherReplyChannel"
		jpa-query="select e from Event e" requires-reply="false">
		<!-- jpa-query="select e from Event e where e.end > :now order by e.start asc"> -->
		 <!-- <int-jpa:parameter name="now" type="java.util.Date" /> -->
		<!-- Seleccionar los eventos tal que la fecha de su final sea mayor que la fecha actual
				y ordenarlos tal que los primeros que aparezcan sean los que antes empiecen -->
	</int-jpa:retrieving-outbound-gateway>

	<!-- ****************************************
	****************** EVENT PRODUCTOR ****************** 
	*********************************************-->
	<int:channel id="publisherReplyChannel" />

	<bean id="eventProductorPoller" class="eventproductor.EventProductorPoller" />
	<bean id="eventProductorPublisher" class="eventproductor.EventProductorPublisher" />
	
	<int:inbound-channel-adapter id="eventProductorPollerIn"
		ref="eventProductorPoller" method="askForEvents" channel="getCloserEventsReplyChannel">
		<int:poller fixed-rate="5000" />
	</int:inbound-channel-adapter>
	
	<int:outbound-channel-adapter id="eventProductorPublisherOut"
		ref="eventProductorPublisher" method="publishTopics"
		channel="publisherReplyChannel">
	</int:outbound-channel-adapter>

	<!-- ****************************************
	****************** PERSISTENCE TEST ****************** 
	*********************************************-->
	
	<int-jpa:retrieving-outbound-gateway id="getAllEventsOutbound"
		entity-manager-factory="entityManagerFactory"
		request-channel="getAllEventsRequestChannel"
		jpa-query="select e from Event e">
	</int-jpa:retrieving-outbound-gateway>

	
</beans>
