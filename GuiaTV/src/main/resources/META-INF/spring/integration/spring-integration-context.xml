<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-file="http://www.springframework.org/schema/integration/file"
	xmlns:int-jpa="http://www.springframework.org/schema/integration/jpa"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/integration/jpa http://www.springframework.org/schema/integration/jpa/spring-integration-jpa-4.1.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-4.1.xsd">


	<int:channel id="createEventoRequestChannel" />
	<int:channel id="listEventoRequestChannel" />
	<int:channel id="xmltvFileOutChannel" />
	<int:channel id="xmltvFileInChannel" />
	
	<int:gateway id="eventoService" service-interface="xmltv.datatypes.EventoService"
		default-request-timeout="5000" default-reply-timeout="5000">
		<int:method name="createEvento" request-channel="createEventoRequestChannel" />
		<int:method name="createMultipleEventos" request-channel="createEventoRequestChannel" />
		<int:method name="findEvento" request-channel="listEventoRequestChannel" />
	</int:gateway>

	<int-jpa:retrieving-outbound-gateway
		entity-manager-factory="entityManagerFactory" request-channel="listEventoRequestChannel"
		jpa-query="select e from Evento e order by e.start asc">
	</int-jpa:retrieving-outbound-gateway>

	<int-jpa:updating-outbound-gateway
		entity-manager-factory="entityManagerFactory" request-channel="createEventoRequestChannel">
		<int-jpa:transactional transaction-manager="transactionManager" />
	</int-jpa:updating-outbound-gateway>

	<!-- file poller who keeps looking at a folder and picks up new landed files -->
	<int-file:inbound-channel-adapter id="filePoller"
		directory="file:src/main/resources/META-INF/xmltv/cap" channel="xmltvFileOutChannel" 
		auto-startup="true" comparator="xmltv.grabber.CustomFileComparator"
		filename-regex="xmltvDump_[0-9][0-9][0-9][0-9]_[0-9][0-9]_[0-9][0-9]_[0-9][0-9]_[0-9][0-9]_[0-9][0-9]\.xml"	>
		<int:poller fixed-rate="1000" />
	</int-file:inbound-channel-adapter>

	<int:transformer id="xmltvTransformer" ref="xmltvTransformerBean"
		input-channel="xmltvFileOutChannel" method="transform" output-channel="createEventoRequestChannel" />
	
	
	<!-- XMLTV Grabber -->
	<int:inbound-channel-adapter id="xmltvGrabberInbound" ref="xmltvGrabber" method="doGrabbing">				
		<int:poller max-messages-per-poll="1" cron="0 	*  *  *   *  ?   *"/>
		<!--										sec m  h  dm  m  dw  y -->	
	</int:inbound-channel-adapter>
	
	<int-file:outbound-channel-adapter id="xmltvGrabberOutbound" channel="xmltvFileInChannel"
		directory="file:src/main/resources/META-INF/xmltv/cap" auto-create-directory="true"
		mode="REPLACE" temporary-file-suffix="writing">
	</int-file:outbound-channel-adapter>

	
	<bean id="xmltvGrabber" class="xmltv.grabber.XMLTVGrabber"/>
	
	<bean id="xmltvTransformerBean" class="xmltv.transformer.XMLTVTransformer" />

	<!-- Depending on the selected profile, users can use different JPA Providers -->
	<beans profile="default, hibernate">
		<import resource="classpath:/META-INF/spring/integration/hibernate-context.xml" />
	</beans>
	<beans profile="default, rabbitmq">
		<import resource="classpath:/META-INF/spring/integration/rabbitmq-context.xml" />
	</beans>
</beans>
